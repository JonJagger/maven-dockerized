
Setting up Logging to Kibana on the ELK stack
=============================================

Part 1: edit your source

git clone https://github.com/JonJagger/maven-dockerized.git

1. add the cloned repo's /src/main/resources/logback.xml
   file to your repo in the same location

2. add the following inside the <dependencies> tag in your pom.xml

    <dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

3. add some code that logs to your app.
   EXAMPLE OF LOGGING CODE...

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Example {

	private Logger logger =
      LoggerFactory.getLogger(LogController.class);

	public void logExample() {
		  logger.warn("Log link clicked");
	}
}

---------------------------------------------------------

Part 2: Check it works when running locally

Build and run your app so it logs a message.
Check the content of the /app/log/app.log file in your apps root directory.

---------------------------------------------------------

Part 3: Check it works when running on the deployment machine

git add your changes
git commit your changes
git push your changes

if the TeamCity build step goes through ok...

1. Run your app so it logs a message

2. Open http://elk.conygre.com:5601 in a tab in a browser.

3. Ensure the time period is set to something quite large.
Look for the mini clock icon at the top right hand side

4. Wait a minute or so.

5. If the name of your project (as set in sh/env-vars.sh) is set to
                         alpha
then enter the following text in the query-string text entry field
                 chennai-alpha && type=applog

6. Confirm that kibana finds and displays your log message







